<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.iei.movie.model.dao.MovieDao">
  <select id="selectMovieList" resultType="movie">
  	select movie_no,movie_title, movie_thumb, movie_grade, movie_content 
  		from movie_tbl
  		
  </select>
  
  <select id="selectOneMovie" resultType="movie">
  	select * from movie_tbl where movie_no = #{movieNo}
  </select>
  
  <insert id="likePush">
  	insert into movie_like_tbl values(#{movieNo},#{memberId})
  </insert>
  
  <select id="isLike" resultType="int">
  	select count(*) from movie_like_tbl where movie_no =#{movieNo} and member_id = #{memberId}
  </select>
  
  <select id="totalLike" resultType="int">
  	select count(*) from movie_like_tbl where movie_no =#{movieNo}
  </select>
  
  <delete id="likeUnPush">
  	delete from movie_like_tbl where movie_no =#{movieNo} and member_id = #{memberId}
  </delete>
  
  <!-- Mian  -->
  <select id="selectBoxOffice" resultType="movie">
  <![CDATA[
  	select 
    	m.movie_no,
    	m.movie_title, 
    	m.movie_thumb, 
    	m.movie_grade, 
    	m.movie_content,
    	count(c.book_no) gallery_count 
	from movie_tbl m 
	left join price_tbl p on (p.movie_no = m.movie_no)
	left join book_tbl b on (b.price_no = p.price_no)
	left join (select bs.book_no from pay_tbl p join book_seat_tbl bs on (bs.book_seat_no = p.book_seat_no) where p.refund_status = 'n') c on (c.book_no = b.book_no) 
	where (m.movie_status != 3 and to_number(sysdate-b.booking_date) <= 7) or (m.movie_status != 3 and b.booking_date is null)
	group by m.movie_no,m.movie_title, m.movie_thumb, m.movie_grade, m.movie_content
	order by gallery_count desc
	 ]]>
  </select>
  
  <!-- 추후 매진 관객 확인 시 결제 상태 컬럼 where로 확인 필요 -->
  <select id="selectSchedule" resultType="movieSchedule">
  <![CDATA[
  	select 
    	sh1.movie_no,---
    	sh1.movie_title,--
    	sh1.movie_grade,--
    	sh1.movie_runtime,
    	sh1.movie_type,--
    	sh1.schedule_time_start,
    	sh1.schedule_time_end,
    	sh1.schedule_open,
    	sh1.schedule_close,
    	sh1.screen_name,
    	sh1.seat_total,
    	sh1.booking_date,
    	COALESCE(sh2.gallery_seat, 0) AS gallery_seat
	from
    	(select 
        	m.movie_no,
        	m.movie_title,
        	m.movie_grade,
        	m.movie_runtime,
        	m.movie_type,--관 타입(2D.3D,4D)
        	s.schedule_time_start,
        	s.schedule_time_end, 
        	s.schedule_open,
        	s.schedule_close, 
        	scr.screen_name,--관 이름
        	st.seat_total,--관별 전체 좌석수
        	b.booking_date--스케줄링된 날짜(관람 예정일)
    	from schedule_tbl s
    	join (select count(*) seat_total, screen_no
            	from seat_tbl
            	group by screen_no) st on (st.screen_no = s.screen_no)
    			join screen_tbl scr on (scr.screen_no = st.screen_no)
    			join movie_tbl m on (m.movie_no = s.movie_no)
    			left join book_tbl b on (b.schedule_no = s.schedule_no)
    			where (sysdate+#{dateSchedule} between s.schedule_open and s.schedule_close) and
    			((to_number(to_char(sysdate,'mm'))*43200)+(to_number(to_char(sysdate,'dd'))*1440)+(to_number(to_char(sysdate+#{dateSchedule},'hh24'))*60)+(to_number(to_char(sysdate+#{dateSchedule},'mi')))) <= 
    				((to_number(to_char(sysdate+#{dateSchedule},'mm'))*43200)+(to_number(to_char(sysdate+#{dateSchedule},'dd'))*1440)+(to_number(to_char(s.schedule_time_start,'hh24'))*60)+(to_number(to_char(s.schedule_time_start,'mi'))))
    			) sh1
			left join (select b.booking_date, sss.schedule_no, gallery_seat 
            			from book_tbl b
            			right join (select s.schedule_no, count(bs.book_seat_no) gallery_seat
            			from book_seat_tbl bs
            			left join book_tbl b on (b.book_no = bs.book_no)
            			left join pay_tbl ppp on (ppp.book_seat_no = bs.book_seat_no)
            right join schedule_tbl s on (s.schedule_no = b.schedule_no)
            where (b.booking_date = sysdate+#{dateSchedule}) and (ppp.refund_status = 'n')
            group by s.schedule_no) sss on (sss.schedule_no = b.schedule_no)) sh2 on (sh1.booking_date = sh2.booking_date)
            order by sh1.schedule_time_start
	  ]]>
  </select>
  <!-- Mian  끝-->
  <select id="selectCommentCount" resultType="int">
  	select count(*) from movie_comment_tbl where movie_no = #{movieNo}
  </select>
  <select id="selectMovieCommentList" resultType="movieComment">
  	select * from
  		(select rownum as rnum, c.* from
  			(select mc.*,
  					m.member_gender,
  					m.member_id 
  				from movie_comment_tbl mc
  				join member_tbl m on mc.member_no = m.member_no
  				where movie_no = #{movieNo}
  				order by 
  				<choose>
  					<when test="order==1">
  						movie_comment_no desc
  					</when>
  					<when test="order==2">
  						movie_score desc
  					</when>	
  				</choose>
  			)c
  		)
  	where rnum between #{start} and #{end}	
  </select>
  <insert id="insertReport">
  	insert into comment_report_tbl values(#{memberNo},#{movieCommentNo},sysdate)
  </insert>
  <insert id="insertComment">
  	insert into movie_comment_tbl values(movie_comment_seq.nextval, #{movieNo}, #{movieScore}, #{commentContent}, #{memberNo}, sysdate)
  </insert>
  <update id="updateComment">
  	update movie_comment_tbl set movie_score = #{movieScore}, comment_content = #{commentContent} where movie_comment_no = #{movieCommentNo} 
  </update>
</mapper>
